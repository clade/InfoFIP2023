{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0b3c315b",
   "metadata": {},
   "source": [
    "# Fichiers avec Python et les notebook\n",
    "\n",
    "- A l'aide de Python, créer un fichier contenant le mot \"Bonjour\"\n",
    "- Ouvrir ce fichier à l'aide d'un étideur de texte et modifier le.\n",
    "- Lire à nouveau le fichier avec Python"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96dbb3df",
   "metadata": {
    "tags": [
     "sol"
    ]
   },
   "source": [
    "--------------------------------------------------------------------------------------\n",
    "\n",
    "## Solution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f961147f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sous windows le bureau se trouve ici\n",
    "PATH = r\"C:\\Users\\login\\Desktop\" # On utilise le r\"\" pour que les \\ ne soient pas interprétés\n",
    "PATH = '/tmp' # J'utilise un repertoire temporaire sous linus\n",
    "\n",
    "import os\n",
    "\n",
    "# La commande os.path.join permet de créer un chemin indépendament du l'OS\n",
    "nom_du_fichier = os.path.join(PATH, 'fichier.txt')\n",
    "\n",
    "with open(nom_du_fichier, 'w') as f:\n",
    "    f.write('Bonjour')\n",
    "    \n",
    "with open(nom_du_fichier) as f:\n",
    "    print(f.read())\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "39ed0e2d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
