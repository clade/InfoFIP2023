{"cells": [{"cell_type": "markdown", "id": "16465f2d", "metadata": {}, "source": ["# Fit de franges d\u2019interf\u00e9rence"]}, {"cell_type": "markdown", "id": "cfd3abf1", "metadata": {"mystnb": {"image": {"width": "200px"}}}, "source": ["\n", "\n", "On souhaite ajuster les franges d\u2019un interf\u00e9rom\u00e8tre atomique. Les donn\u00e9es sont dans le fichier {download}`data/fit_sinus.dat <data/fit_sinus.dat>`. La premi\u00e8re colonne du fichiers (axe x) repr\u00e9sente une fr\u00e9quence en Hz. La seconde colonne repr\u00e9sente la population mesur\u00e9e pour une fr\u00e9quence donn\u00e9e. L\u2019objectif est de trouver la position de la frange centrale.\n", "\n", "Voici \u00e0 quoi ressemblent les donn\u00e9es : \n", "\n", "```{image} data_interfero.png\n", ":alt: Interferometre atomique\n", ":width: 70%\n", ":align: center\n", "```\n", "\n", "\n", "On ajustera par une fonction cosinus avec une amplitude, une moyenne, une position de la frange centrale et une largeur ajustable (interfrange), soit en tout quatre param\u00e8tres.\n", "\n", "\n", "1. Lire le fichier et tracer les donn\u00e9es.\n", "\n", "2. \u00c9crire  la   fonction   de   fit   qui   d\u00e9pend   des   param\u00e8tres   ci   dessus.   On   appellera frange(x, ...).  Tracez  la  courbe  pour  x  entre \u00b1220 Hz avec des param\u00e8tre raisonables.  On  prendra  un  inter-frange de 200 Hz.\n", "\n", "3. Calculer les param\u00e8tres optimaux. Quelle est la position la frange centrale ? Repr\u00e9sentez les points et la courbe.\n", "\n", "4. Quelle est l\u2019incertitude sur la position de la frange centrale ?"]}], "metadata": {"celltoolbar": "\u00c9diter les M\u00e9ta-Donn\u00e9es", "kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.8.8"}, "varInspector": {"cols": {"lenName": 16, "lenType": 16, "lenVar": 40}, "kernels_config": {"python": {"delete_cmd_postfix": "", "delete_cmd_prefix": "del ", "library": "var_list.py", "varRefreshCmd": "print(var_dic_list())"}, "r": {"delete_cmd_postfix": ") ", "delete_cmd_prefix": "rm(", "library": "var_list.r", "varRefreshCmd": "cat(var_dic_list()) "}}, "types_to_exclude": ["module", "function", "builtin_function_or_method", "instance", "_Feature"], "window_display": false}}, "nbformat": 4, "nbformat_minor": 5}